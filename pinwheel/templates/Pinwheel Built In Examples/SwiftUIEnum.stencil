import Foundation
import UIKit

enum {{ exportFileName|capitalize }} {
{% for item in items %}
    {% if item.colorItem %}
    static let {%+ codeSafeName item.name +%} = {%+ colorAsSwiftUIColor item.colorItem.color.light +%} 
        {% if item.colorItem.color.dark %}
    static let {%+ codeSafeName item.name %}Dark = {%+ colorAsSwiftUIColor item.colorItem.color.dark +%} 
        {% endif %}
        {% if item.colorItem.color.highContrast %}
    static let {%+ codeSafeName item.name %}HighContrast = {%+ colorAsSwiftUIColor item.colorItem.color.highContrast +%} 
        {% endif %}
        {% if item.colorItem.color.darkHighContrast %}
    static let {%+ codeSafeName item.name %}DarkHighContrast = {%+ colorAsSwiftUIColor item.colorItem.color.darkHighContrast +%} 
        {% endif %}
    {% elif item.colorSet %}
    enum {{ item.name|capitalize }} {
        {% for color in item.colorSet.colors %}
        static let {%+ codeSafeName color.name +%} = {%+ colorAsSwiftUIColor color.light +%}
            {% if color.dark %}
        static let {%+ codeSafeName color.name +%}Dark = {%+ colorAsSwiftUIColor color.dark +%}
            {% endif %}
            {% if color.highContrast %}
        static let {%+ codeSafeName color.name +%}HighContrast = {%+ colorAsSwiftUIColor color.highContrast +%}
            {% endif %}
            {% if color.darkHighContrast %}
        static let {%+ codeSafeName color.name +%}DarkHighContrast = {%+ colorAsSwiftUIColor color.darkHighContrast +%}   
            {% endif %}
        {% endfor %}
    }
    {% elif item.number %}
    static let {%+ codeSafeName item.name +%} = {{ item.number.value.light }}
        {% if item.number.value.dark %}
    static let {%+ codeSafeName item.name %}Dark = {{ item.number.value.dark }}
        {% endif %}
        {% if item.number.value.highContrast %}
    static let {%+ codeSafeName item.name %}HighContrast = {{ item.number.value.highContrast }}
        {% endif %}
        {% if item.number.value.darkHighContrast %}
    static let {%+ codeSafeName item.name %}DarkHighContrast = {{ item.number.value.darkHighContrast }}
        {% endif %}
    {% elif item.boolean %}
    static let {%+ codeSafeName item.name +%} = {{ item.boolean.value.light }}
        {% if item.boolean.value.dark %}
    static let {%+ codeSafeName item.name %}Dark = {{ item.boolean.value.dark }}
        {% endif %}
        {% if item.boolean.value.highContrast %}
    static let {%+ codeSafeName item.name %}HighContrast = {{ item.boolean.value.highContrast }}
        {% endif %}
        {% if item.boolean.value.darkHighContrast %}
    static let {%+ codeSafeName item.name %}DarkHighContrast = {{ item.boolean.value.darkHighContrast }}
        {% endif %}
    {% elif item.string %}
    static let {%+ codeSafeName item.name +%} = "{{ item.string.value.light }}"
        {% if item.string.value.dark %}
    static let {%+ codeSafeName item.name %}Dark = "{{ item.string.value.dark }}"
        {% endif %}
        {% if item.string.value.highContrast %}
    static let {%+ codeSafeName item.name %}HighContrast = "{{ item.string.value.highContrast }}"
        {% endif %}
        {% if item.string.value.darkHighContrast %}
    static let {%+ codeSafeName item.name %}DarkHighContrast = "{{ item.string.value.darkHighContrast }}"
        {% endif %}
    {% elif item.shadowItem %}
    static let {{ item.name }} = {%+ shadowAsSwiftUIPinwheelShadow item.shadowItem.shadow.light +%} 
        {% if item.shadowItem.shadow.dark %}
    static let {{ item.name }}Dark = {%+ shadowAsSwiftUIPinwheelShadow item.shadowItem.shadow.dark +%} 
        {% endif %}
        {% if item.shadowItem.shadow.highContrast %}
    static let {{ item.name }}HighContrast = {%+ shadowAsSwiftUIPinwheelShadow item.shadowItem.shadow.highContrast +%} 
        {% endif %}
        {% if item.shadowItem.shadow.darkHighContrast %}
    static let {{ item.name }}DarkHighContrast = {%+ shadowAsSwiftUIPinwheelShadow item.shadowItem.shadow.darkHighContrast +%} 
        {% endif %}
    {% elif item.shadowSet %}
    enum {{ item.name|capitalize }} {
        {% for shadow in item.shadowSet.shadows %}
        static let {%+ codeSafeName shadow.name +%} = {%+ shadowAsSwiftUIPinwheelShadow shadow.light +%} 
            {% if shadow.dark %}
        static let {%+ codeSafeName shadow.name +%}Dark = {%+ shadowAsSwiftUIPinwheelShadow shadow.dark +%} 
            {% endif %}
            {% if shadow.highContrast %}
        static let {%+ codeSafeName shadow.name +%}HighContrast = {%+ shadowAsSwiftUIPinwheelShadow shadow.highContrast +%} 
            {% endif %}
            {% if shadow.darkHighContrast %}
        static let {%+ codeSafeName shadow.name +%}DarkHighContrast = {%+ shadowAsSwiftUIPinwheelShadow shadow.darkHighContrast +%}   
            {% endif %}
        {% endfor %}
    }
    {% endif %}
{% endfor %}
}

struct PinwheelShadow {
    static let blurScaleFactor = 0.5 // .shadow() swiftUI scale factor so the blur matches CSS box shadows and Pinwheel previews

    let x: Double
    let y: Double
    let blur: Double
    let spread: Double
    let color: Color
    
    var swiftUIScaledBlur: Double {
        blur * Self.blurScaleFactor
    }
}
